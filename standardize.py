def main():
  all_files = ['en_geo_2020-04-03-029.json', 'en_geo_2020-03-06.json', 'en_geo_2020-02-20.json', 'en_geo_2020-03-31-027.json', 'en_geo_2020-04-19-043.json', 'en_geo_2020-03-02.json', 'en_geo_2020-02-17.json', 'en_geo_2020-03-18.json', 'en_geo_2020-03-17-034.json', 'en_geo_2020-02-07.json', 'en_geo_2020-04-25.json', 'en_geo_2020-03-26-049.json', 'en_geo_2020-04-16-039.json', 'en_geo_2020-02-10.json', 'en_geo_2020-04-04.json', 'en_geo_2020-02-18.json', 'en_geo_2020-02-02.json', 'en_geo_2020-02-25.json', 'en_geo_2020-04-24-053.json', 'en_geo_2020-03-28-025.json', 'en_geo_2020-03-24.json', 'en_geo_2020-04-06-036.json', 'en_geo_2020-03-23-023.json', 'en_geo_2020-03-15.json', 'en_geo_2020-02-04.json', 'en_geo_2020-03-08.json', 'en_geo_2020-03-22.json', 'en_geo_2020-02-26.json', 'sample.json', 'en_geo_2020-04-21-050.json', 'en_geo_2020-03-20.json', 'en_geo_2020-03-05.json', 'en_geo_2020-03-13-024.json', 'en_geo_2020-02-13.json', 'en_geo_2020-03-19.json', 'en_geo_2020-02-27.json', 'en_geo_2020-04-15-055.json', 'en_geo_2020-04-20-057.json', 'en_geo_2020-04-29.json', 'en_geo_2020-03-10.json', 'en_geo_2020-04-05-030.json', 'en_geo_2020-02-21.json', 'en_geo_2020-03-01.json', 'en_geo_2020-02-12.json', 'en_geo_2020-02-23.json', 'en_geo_2020-03-12-022.json', 'en_geo_2020-04-28.json', 'en_geo_2020-04-17-042.json', 'en_geo_2020-04-11-031.json', 'en_geo_2020-03-03.json', 'en_geo_2020-04-27.json', 'en_geo_2020-03-27-020.json', 'en_geo_2020-02-28.json', 'en_geo_2020-04-14-035.json', 'en_geo_2020-02-06.json', 'en_geo_2020-04-01-046.json', 'en_geo_2020-03-04.json', 'en_geo_2020-02-16.json', 'en_geo_2020-04-07-044.json', 'en_geo_2020-04-02-054.json', 'en_geo_2020-04-09-033.json', 'en_geo_2020-03-07.json', 'en_geo_2020-03-21.json', 'en_geo_2020-02-05.json', 'en_geo_2020-04-13-041.json', 'en_geo_2020-04-26-052.json', 'en_geo_2020-02-11.json', 'en_geo_2020-02-29.json', 'en_geo_2020-03-11.json', 'en_geo_2020-04-10-058.json', 'en_geo_2020-02-01.json', 'en_geo_2020-02-08.json', 'en_geo_2020-04-12-028.json', 'en_geo_2020-03-29-032.json', 'en_geo_2020-03-25.json', 'en_geo_2020-03-16.json', 'en_geo_2020-02-03.json', 'en_geo_2020-04-30.json', 'en_geo_2020-04-08-040.json', 'en_geo_2020-02-09.json', 'en_geo_2020-04-18-038.json', 'en_geo_2020-02-22.json', 'en_geo_2020-04-22-056.json', 'en_geo_2020-02-15.json', 'en_geo_2020-03-09.json', 'en_geo_2020-04-23-048.json', 'en_geo_2020-03-30-045.json', 'en_geo_2020-02-14.json', 'en_geo_2020-02-19.json', 'en_geo_2020-03-14.json', 'en_geo_2020-02-24.json']
  all_files_without_feb = [f for f in all_files if f.find("en_geo_2020-02") == -1]
  all_files_without_feb.sort()
  file_names = ["en_geo_2020-03-01.json", "en_geo_2020-03-02.json", "en_geo_2020-03-03.json", "en_geo_2020-03-04.json", "en_geo_2020-03-05.json", "en_geo_2020-03-06.json", "en_geo_2020-03-07.json", "en_geo_2020-03-08.json", "en_geo_2020-03-09.json", "en_geo_2020-03-10.json", "en_geo_2020-03-11.json", "en_geo_2020-03-12-022.json", "en_geo_2020-03-13-024.json", "en_geo_2020-03-14.json", "en_geo_2020-03-15.json", "en_geo_2020-03-16.json", "en_geo_2020-03-17-034.json", "en_geo_2020-03-18.json", "en_geo_2020-03-19.json", "en_geo_2020-03-20.json", "en_geo_2020-03-21.json", "en_geo_2020-03-22.json", "en_geo_2020-03-23-023.json", "en_geo_2020-03-24.json", "en_geo_2020-03-25.json", "en_geo_2020-03-26-049.json", "en_geo_2020-03-27-020.json", "en_geo_2020-03-28-025.json", "en_geo_2020-03-29-032.json", "en_geo_2020-03-30-045.json", "en_geo_2020-03-31-027.json", "en_geo_2020-04-01-046.json", "en_geo_2020-04-02-054.json", "en_geo_2020-04-03-029.json", "en_geo_2020-04-04.json", "en_geo_2020-04-05-030.json", "en_geo_2020-04-06-036.json", "en_geo_2020-04-07-044.json", "en_geo_2020-04-08-040.json", "en_geo_2020-04-09-033.json", "en_geo_2020-04-10-058.json", "en_geo_2020-04-11-031.json", "en_geo_2020-04-12-028.json", "en_geo_2020-04-13-041.json", "en_geo_2020-04-14-035.json", "en_geo_2020-04-15-055.json", "en_geo_2020-04-16-039.json", "en_geo_2020-04-17-042.json", "en_geo_2020-04-18-038.json", "en_geo_2020-04-19-043.json", "en_geo_2020-04-20-057.json", "en_geo_2020-04-21-050.json", "en_geo_2020-04-22-056.json", "en_geo_2020-04-23-048.json", "en_geo_2020-04-24-053.json", "en_geo_2020-04-25.json", "en_geo_2020-04-26-052.json", "en_geo_2020-04-27.json", "en_geo_2020-04-28.json", "en_geo_2020-04-29.json", "en_geo_2020-04-30.json"]
  total_counts = [2587375, 2912772, 2650627, 2739284, 3385304, 3344394, 2997646, 2996836, 3934717, 3976024, 4144421, 5564081, 5796006, 4800132, 5462655, 5299357, 5830353, 3153431, 2426096, 2559813, 2246600, 4022144, 5804424, 5047942, 3869692, 5942466, 5614350, 5801992, 6549926, 6811173, 6747454, 6819910, 6711403, 6214024, 5484468, 6107337, 6362181, 6991344, 7164406, 6176908, 6586427, 6005212, 5620214, 5905591, 6183847, 6218897, 6438609, 6118470, 6116518, 5920523, 5987908, 5857358, 5859970, 5987043, 6110339, 4976983, 6029696, 5221024, 5327055, 5053481, 4612091]
  
  std_per = 1.75 / 100

  print('here')
  for i in range(len(file_names)):
    file = file_names[i]
    total_count = total_counts[i]
    with open("./Output/" + file + '_categorized.csv', "r") as inptr:
      with open("./Final Data (Standardized 1.75)/" + file + '_standardized.csv', "w") as outptr:
        max_lines = int(std_per * total_count)
        written_lines = 0
        print(file, max_lines)
        for row in inptr:
          outptr.write(row)
          written_lines += 1
          if(written_lines >= max_lines):
            break


if __name__ == '__main__':
	main()